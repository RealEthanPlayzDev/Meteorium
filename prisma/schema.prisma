// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("METEORIUM_POSTGRES_URL")
}

model Guild {
    GuildId               String           @unique
    EnforceSayInExecutor  Boolean          @default(false)
    JoinLeaveLogChannelId String           @default("")
    PublicModLogChannelId String           @default("")
    LoggingChannelId      String           @default("")
    BanAppealLink         String           @default("")
    ModerationCase        ModerationCase[]
    Tag                   Tag[]
}

enum ModerationAction {
    Ban
    TempBan
    Kick
    Mute
    Warn
    Unban
}

model ModerationCase {
    GlobalCaseId          Int                     @id @default(autoincrement())
    Guild                 Guild                   @relation(fields: [GuildId], references: [GuildId], onDelete: Cascade)
    GuildId               String
    CaseId                Int
    Action                ModerationAction
    TargetUserId          String
    ModeratorUserId       String
    Reason                String
    AttachmentProof       String                  @default("")
    Duration              String                  @default("0")
    ModeratorNote         String                  @default("")
    ModeratorAttachment   String                  @default("")
    NotAppealable         Boolean                 @default(false)
    PublicModLogMsgId     String                  @default("")
    CreatedAt             DateTime                @default(now())
    ActiveTempBans        ActiveTempBans[]
    ModerationCaseHistory ModerationCaseHistory[]

    @@unique(name: "UniqueCaseIdPerGuild", fields: [GuildId, CaseId])
}

model ModerationCaseHistory {
    ModerationCaseHistoryId Int            @id @default(autoincrement())
    ModerationCase          ModerationCase @relation(fields: [GlobalCaseId], references: [GlobalCaseId], onDelete: Cascade)
    GlobalCaseId            Int
    EditedAt                DateTime       @default(now())
    Editor                  String
    Reason                  String?
    AttachmentProof         String?
    Duration                String?
    ModeratorNote           String?
    ModeratorAttachment     String?
    NotAppealable           Boolean?
    Removed                 Boolean?
}

model ActiveTempBans {
    ActiveTempBanId Int            @id @default(autoincrement())
    GlobalCaseId    Int
    Case            ModerationCase @relation(fields: [GlobalCaseId], references: [GlobalCaseId], onDelete: Cascade)
}

model Tag {
    GlobalTagId Int    @id @default(autoincrement())
    Guild       Guild  @relation(fields: [GuildId], references: [GuildId], onDelete: Cascade)
    GuildId     String
    TagName     String
    Content     String
    Attachment  String @default("")
}
